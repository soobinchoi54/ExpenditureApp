{"ast":null,"code":"var _jsxFileName = \"/Users/soobinchoi/Documents/Project/Expenditure App/client/src/Transactions.js\",\n    _s = $RefreshSig$();\n\nimport Axios from \"axios\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Transactions() {\n  _s();\n\n  const [transactionList, setTransaction] = useState([]);\n  const [newAmount, setNewAmount] = useState(0);\n\n  const getTransactions = () => {\n    Axios.get(\"http://localhost:3001/transactions\").then(response => {\n      setTransaction(response.data);\n    });\n  };\n\n  const deleteTransaction = id => {\n    Axios.delete(`http://localhost:3001/delete/${id}`).then(response => {\n      setTransaction(transactionList.filter(val => {\n        return val.id !== id;\n      }));\n    });\n  };\n\n  const updateTransactionAmount = id => {\n    Axios.put(\"http://localhost:3001/update\", {\n      amount: newAmount,\n      id: id\n    }).then(response => {\n      console.log(\"Update\");\n    });\n  };\n\n  const formatDate = date => {\n    let d = new Date(date).toDateString();\n    return d;\n  };\n\n  const formatCategory = string => {\n    // split string at _ and for capitalize each word\n    let arr = [];\n    let capArr = [];\n    arr.push(string.replace(\"_\", \" \"));\n    arr.forEach(item => {\n      console.log(item);\n      capArr.push(item.charAt(0).toUpperCase() + item.slice(1));\n    });\n    return capArr;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transactions\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getTransactions,\n      children: \"Show Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), transactionList.map((val, key) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transactions\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatDate(val.date)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: val.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatCategory(val.category)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatCategory(val.subcategory)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: val.amount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  onChange: event => {\n                    setNewAmount(event.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"delete\",\n                  onClick: () => {\n                    deleteTransaction(val.id);\n                  },\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"update\",\n                  onClick: () => {\n                    updateTransactionAmount(val.id);\n                  },\n                  children: \"Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Transactions, \"mM+hdyu2aNgnM2fJCu+QN+UxNbs=\");\n\n_c = Transactions;\nexport default Transactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"sources":["/Users/soobinchoi/Documents/Project/Expenditure App/client/src/Transactions.js"],"names":["Axios","useState","Transactions","transactionList","setTransaction","newAmount","setNewAmount","getTransactions","get","then","response","data","deleteTransaction","id","delete","filter","val","updateTransactionAmount","put","amount","console","log","formatDate","date","d","Date","toDateString","formatCategory","string","arr","capArr","push","replace","forEach","item","charAt","toUpperCase","slice","map","key","description","category","subcategory","event","target","value"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\nimport { useState } from \"react\";\n\nfunction Transactions() {\n  const [transactionList, setTransaction] = useState([]);\n  const [newAmount, setNewAmount] = useState(0);\n\n  const getTransactions = () => {\n    Axios.get(\"http://localhost:3001/transactions\").then((response) => {\n      setTransaction(response.data);\n    });\n  };\n\n  const deleteTransaction = (id) => {\n    Axios.delete(`http://localhost:3001/delete/${id}`).then((response) => {\n      setTransaction(\n        transactionList.filter((val) => {\n          return val.id !== id;\n        })\n      );\n    });\n  };\n\n  const updateTransactionAmount = (id) => {\n    Axios.put(\"http://localhost:3001/update\", {\n      amount: newAmount,\n      id: id,\n    }).then((response) => {\n      console.log(\"Update\");\n    });\n  };\n  const formatDate = (date) => {\n    let d = new Date(date).toDateString();\n    return d;\n  };\n\n  const formatCategory = (string) => {\n    // split string at _ and for capitalize each word\n    let arr = [];\n    let capArr = [];\n    arr.push(string.replace(\"_\", \" \"));\n    arr.forEach((item) => {\n      console.log(item);\n      capArr.push(item.charAt(0).toUpperCase() + item.slice(1));\n    });\n    return capArr;\n  };\n\n  return (\n    <div className=\"transactions\">\n      <button onClick={getTransactions}>Show Transactions</button>\n      {transactionList.map((val, key) => {\n        return (\n          <div className=\"transactions\">\n            <table>\n              <tbody>\n                <tr>\n                  <td>{formatDate(val.date)}</td>\n                  <td>{val.description}</td>\n                  <td>{formatCategory(val.category)}</td>\n                  <td>{formatCategory(val.subcategory)}</td>\n                  <td>{val.amount}</td>\n                  <td>\n                    <input\n                      type=\"text\"\n                      onChange={(event) => {\n                        setNewAmount(event.target.value);\n                      }}\n                    ></input>\n                  </td>\n                  <td>\n                    <button\n                      className=\"delete\"\n                      onClick={() => {\n                        deleteTransaction(val.id);\n                      }}\n                    >\n                      Delete\n                    </button>\n                  </td>\n                  <td>\n                    <button\n                      className=\"update\"\n                      onClick={() => {\n                        updateTransactionAmount(val.id);\n                      }}\n                    >\n                      Update\n                    </button>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Transactions;\n"]},"metadata":{},"sourceType":"module"}